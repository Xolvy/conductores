# üßπ Script de Limpieza - Eliminaci√≥n de Archivos Obsoletos
# Proyecto: Sistema de Territorios - Optimizaci√≥n Completa

Write-Host "üöÄ INICIANDO LIMPIEZA DE ARCHIVOS OBSOLETOS..." -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Gray

# Funci√≥n para eliminar archivo con verificaci√≥n
function Remove-ObsoleteFile {
    param([string]$FilePath, [string]$Description)
    
    if (Test-Path $FilePath) {
        try {
            Remove-Item $FilePath -Force
            Write-Host "‚úÖ Eliminado: $Description" -ForegroundColor Green
            Write-Host "   Archivo: $FilePath" -ForegroundColor Gray
            return $true
        }
        catch {
            Write-Host "‚ùå Error eliminando: $FilePath" -ForegroundColor Red
            Write-Host "   Error: $($_.Exception.Message)" -ForegroundColor Yellow
            return $false
        }
    }
    else {
        Write-Host "‚ö†Ô∏è  No encontrado: $FilePath" -ForegroundColor Yellow
        return $false
    }
}

# Contadores
$TotalFiles = 0
$DeletedFiles = 0
$ErrorFiles = 0

Write-Host "`nüìÇ ELIMINANDO VERSIONES OBSOLETAS DE INDEX..." -ForegroundColor Magenta

# 1. Versiones obsoletas de index (8 archivos)
$IndexFiles = @(
    @{ Path = "index-complete.html"; Desc = "Index completo obsoleto" },
    @{ Path = "index-v3.html"; Desc = "Index versi√≥n 3 obsoleto" },
    @{ Path = "index-test.html"; Desc = "Index de testing obsoleto" },
    @{ Path = "index-backup.html"; Desc = "Backup de index obsoleto" },
    @{ Path = "index-old.html"; Desc = "Index antiguo obsoleto" },
    @{ Path = "index-original.html"; Desc = "Index original obsoleto" },
    @{ Path = "index-previous.html"; Desc = "Index previo obsoleto" },
    @{ Path = "index-legacy.html"; Desc = "Index legacy obsoleto" }
)

foreach ($file in $IndexFiles) {
    $TotalFiles++
    if (Remove-ObsoleteFile $file.Path $file.Desc) { $DeletedFiles++ } else { $ErrorFiles++ }
}

Write-Host "`nüì¶ ELIMINANDO CONFIGURACIONES DUPLICADAS..." -ForegroundColor Magenta

# 2. Configuraciones duplicadas (6 archivos)
$ConfigFiles = @(
    @{ Path = "package-2026.json"; Desc = "Package.json versi√≥n 2026" },
    @{ Path = "package-backup.json"; Desc = "Package.json backup" },
    @{ Path = "tsconfig-optimized.json"; Desc = "TSConfig optimizado duplicado" },
    @{ Path = "tsconfig-backup.json"; Desc = "TSConfig backup" },
    @{ Path = "next.config.backup.js"; Desc = "Next.js config backup" },
    @{ Path = "tailwind.config.backup.js"; Desc = "Tailwind config backup" }
)

foreach ($file in $ConfigFiles) {
    $TotalFiles++
    if (Remove-ObsoleteFile $file.Path $file.Desc) { $DeletedFiles++ } else { $ErrorFiles++ }
}

Write-Host "`n‚öôÔ∏è ELIMINANDO SCRIPTS OBSOLETOS..." -ForegroundColor Magenta

# 3. Scripts obsoletos (8 archivos)
$ScriptFiles = @(
    @{ Path = "deploy-final.ps1"; Desc = "Script de deploy final obsoleto" },
    @{ Path = "deploy-backup.ps1"; Desc = "Script de deploy backup" },
    @{ Path = "launch-firebase-backup.bat"; Desc = "Launcher Firebase backup" },
    @{ Path = "build-old.js"; Desc = "Script de build antiguo" },
    @{ Path = "useAdvancedAnalytics.js"; Desc = "Hook obsoleto de analytics" },
    @{ Path = "optimization-old.js"; Desc = "Script de optimizaci√≥n antiguo" },
    @{ Path = "cleanup-old.ps1"; Desc = "Script de limpieza antiguo" },
    @{ Path = "generate-sw-old.js"; Desc = "Generador de SW obsoleto" }
)

foreach ($file in $ScriptFiles) {
    $TotalFiles++
    if (Remove-ObsoleteFile $file.Path $file.Desc) { $DeletedFiles++ } else { $ErrorFiles++ }
}

Write-Host "`nüóÇÔ∏è ELIMINANDO COMPONENTES OBSOLETOS..." -ForegroundColor Magenta

# 4. Componentes React obsoletos (8 archivos)
$ComponentFiles = @(
    @{ Path = "src\components\AdminPanel-old.tsx"; Desc = "AdminPanel versi√≥n antigua" },
    @{ Path = "src\components\ConductorSelector-backup.tsx"; Desc = "Selector backup" },
    @{ Path = "src\components\LoginScreen-old.tsx"; Desc = "Login screen antiguo" },
    @{ Path = "src\components\TestComponent-obsolete.tsx"; Desc = "Componente de test obsoleto" },
    @{ Path = "src\app\test-old\page.tsx"; Desc = "P√°gina de test antigua" },
    @{ Path = "src\app\admin-backup\layout.tsx"; Desc = "Layout admin backup" },
    @{ Path = "src\hooks\useOldFirebase.ts"; Desc = "Hook Firebase obsoleto" },
    @{ Path = "src\utils\legacy-helpers.ts"; Desc = "Helpers legacy" }
)

foreach ($file in $ComponentFiles) {
    $TotalFiles++
    if (Remove-ObsoleteFile $file.Path $file.Desc) { $DeletedFiles++ } else { $ErrorFiles++ }
}

Write-Host "`nüìÑ ELIMINANDO DOCUMENTACI√ìN FRAGMENTADA..." -ForegroundColor Magenta

# 5. Documentaci√≥n fragmentada (17 archivos)
$DocFiles = @(
    @{ Path = "CONFIGURACION_GOOGLE_OAUTH.md"; Desc = "Config OAuth obsoleta" },
    @{ Path = "CREDENCIALES_SISTEMA.md"; Desc = "Credenciales obsoletas" },
    @{ Path = "FIREBASE_ADMIN_SETUP.md"; Desc = "Setup Firebase obsoleto" },
    @{ Path = "FIREBASE_MIGRATION_PLAN.md"; Desc = "Plan migraci√≥n obsoleto" },
    @{ Path = "FIREBASE_MIGRATION_READY.md"; Desc = "Migraci√≥n ready obsoleto" },
    @{ Path = "INSTRUCCIONES_DATOS_CSV.md"; Desc = "Instrucciones CSV obsoletas" },
    @{ Path = "OPTIMIZACIONES_RENDIMIENTO.md"; Desc = "Optimizaciones obsoletas" },
    @{ Path = "PHONE_NUMBER_CONSOLIDATION.md"; Desc = "Consolidaci√≥n tel√©fonos obsoleta" },
    @{ Path = "RESUMEN_IMPLEMENTACION.md"; Desc = "Resumen implementaci√≥n obsoleto" },
    @{ Path = "SELECCION-MULTIPLE.md"; Desc = "Selecci√≥n m√∫ltiple obsoleta" },
    @{ Path = "README-old.md"; Desc = "README antiguo" },
    @{ Path = "DEPLOYMENT-old.md"; Desc = "Deployment antiguo" },
    @{ Path = "ADMIN-GUIDE-old.md"; Desc = "Gu√≠a admin antigua" },
    @{ Path = "CHANGELOG-old.md"; Desc = "Changelog antiguo" },
    @{ Path = "SECURITY-old.md"; Desc = "Seguridad antigua" },
    @{ Path = "API-DOCS-old.md"; Desc = "API docs antigua" },
    @{ Path = "TROUBLESHOOTING-old.md"; Desc = "Troubleshooting antiguo" }
)

foreach ($file in $DocFiles) {
    $TotalFiles++
    if (Remove-ObsoleteFile $file.Path $file.Desc) { $DeletedFiles++ } else { $ErrorFiles++ }
}

Write-Host "`nüìä RESUMEN DE LIMPIEZA:" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Gray
Write-Host "üìÅ Total archivos procesados: $TotalFiles" -ForegroundColor White
Write-Host "‚úÖ Archivos eliminados: $DeletedFiles" -ForegroundColor Green
Write-Host "‚ùå Errores: $ErrorFiles" -ForegroundColor Red
Write-Host "üìà Tasa de √©xito: $([math]::Round(($DeletedFiles/$TotalFiles)*100, 1))%" -ForegroundColor Yellow

if ($DeletedFiles -gt 0) {
    Write-Host "`nüéâ ¬°LIMPIEZA COMPLETADA CON √âXITO!" -ForegroundColor Green
    Write-Host "   ‚ú® Se eliminaron $DeletedFiles archivos obsoletos" -ForegroundColor Green
    Write-Host "   üì¶ Estructura del proyecto optimizada" -ForegroundColor Green
    Write-Host "   üöÄ Proyecto listo para producci√≥n" -ForegroundColor Green
}

if ($ErrorFiles -gt 0) {
    Write-Host "`n‚ö†Ô∏è  ADVERTENCIA: Se encontraron $ErrorFiles errores" -ForegroundColor Yellow
    Write-Host "   üëÄ Revisar los archivos que no pudieron eliminarse" -ForegroundColor Yellow
}

Write-Host "`nüìÇ NUEVA ESTRUCTURA DEL PROYECTO:" -ForegroundColor Cyan
Write-Host "‚îú‚îÄ‚îÄ src/" -ForegroundColor Green
Write-Host "‚îÇ   ‚îú‚îÄ‚îÄ index.html (aplicacion principal)" -ForegroundColor Gray
Write-Host "‚îÇ   ‚îî‚îÄ‚îÄ manifest.json (PWA config)" -ForegroundColor Gray
Write-Host "‚îú‚îÄ‚îÄ docs/" -ForegroundColor Green
Write-Host "‚îÇ   ‚îú‚îÄ‚îÄ README.md (documentacion principal)" -ForegroundColor Gray
Write-Host "‚îÇ   ‚îú‚îÄ‚îÄ ADMIN_GUIDE.md (guia administrador)" -ForegroundColor Gray
Write-Host "‚îÇ   ‚îú‚îÄ‚îÄ DEPLOYMENT.md (guia despliegue)" -ForegroundColor Gray
Write-Host "‚îÇ   ‚îî‚îÄ‚îÄ CHANGELOG.md (historial cambios)" -ForegroundColor Gray
Write-Host "‚îú‚îÄ‚îÄ scripts/" -ForegroundColor Green
Write-Host "‚îÇ   ‚îú‚îÄ‚îÄ deploy.ps1 (deployment automatizado)" -ForegroundColor Gray
Write-Host "‚îÇ   ‚îî‚îÄ‚îÄ build.js (build automatizado)" -ForegroundColor Gray
Write-Host "‚îú‚îÄ‚îÄ public/ (assets estaticos)" -ForegroundColor Green
Write-Host "‚îî‚îÄ‚îÄ package-optimized.json (dependencias limpias)" -ForegroundColor Green

Write-Host "`nüîÑ SIGUIENTES PASOS:" -ForegroundColor Cyan
Write-Host "1. üîß Ejecutar: npm run build" -ForegroundColor Yellow
Write-Host "2. üöÄ Ejecutar: npm run deploy" -ForegroundColor Yellow
Write-Host "3. ‚úÖ Verificar: https://conductores-9oct.web.app" -ForegroundColor Yellow
Write-Host "4. üìö Revisar: docs/README.md para informaci√≥n completa" -ForegroundColor Yellow

Write-Host "`n‚ú® ¬°PROYECTO COMPLETAMENTE MODERNIZADO!" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Gray