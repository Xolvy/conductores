# 🚀 Docker Compose para App Conductores
# Configuración completa para desarrollo y producción

version: "3.8"

services:
  # ==============================================
  # 🌐 Aplicación Next.js Principal
  # ==============================================
  app-conductores:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: conductores-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env.local
    volumes:
      # Mount para logs de aplicación
      - ./logs:/app/logs
    networks:
      - conductores-network
    restart: unless-stopped
    depends_on:
      - firebase-emulator
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.conductores.rule=Host(`conductores.local`)"
      - "traefik.http.services.conductores.loadbalancer.server.port=3000"

  # ==============================================
  # 🔥 Firebase Emulator Suite (Desarrollo)
  # ==============================================
  firebase-emulator:
    image: google/cloud-sdk:alpine
    container_name: firebase-emulator
    ports:
      - "4000:4000" # Firebase Emulator UI
      - "8080:8080" # Firestore Emulator
      - "9099:9099" # Auth Emulator
      - "5001:5001" # Functions Emulator
      - "9199:9199" # Database Emulator
      - "9000:9000" # Hosting Emulator
    volumes:
      - .:/workspace
      - firebase-data:/opt/workspace/.firebase
    working_dir: /workspace
    command: >
      sh -c "
        npm install -g firebase-tools &&
        firebase emulators:start --only firestore,auth,hosting,ui --project conductores-9oct
      "
    networks:
      - conductores-network
    environment:
      - FIREBASE_PROJECT_ID=conductores-9oct
      - GCLOUD_PROJECT=conductores-9oct

  # ==============================================
  # 📊 Nginx Reverse Proxy (Opcional)
  # ==============================================
  nginx:
    image: nginx:alpine
    container_name: conductores-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - conductores-network
    depends_on:
      - app-conductores
    restart: unless-stopped

  # ==============================================
  # 📈 Monitoring con Prometheus (Opcional)
  # ==============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: conductores-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - conductores-network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"

  # ==============================================
  # 📊 Grafana Dashboard (Opcional)
  # ==============================================
  grafana:
    image: grafana/grafana:latest
    container_name: conductores-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - conductores-network
    depends_on:
      - prometheus

# ==============================================
# 🌐 Networks
# ==============================================
networks:
  conductores-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ==============================================
# 💾 Volumes
# ==============================================
volumes:
  firebase-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
